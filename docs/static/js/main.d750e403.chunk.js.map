{"version":3,"sources":["Components/AddCategory.js","Helpers/GetGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","Categories","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","undefined","find","x","className","type","value","onChange","target","GetGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","item","id","title","images","downsized_large","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","img","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,cAErC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,oCACA,0BAAMC,SAVY,SAACC,GACnBA,EAAEC,iBACgB,KAAfJ,QAA+DK,IAA1CR,EAAWS,MAAK,SAAAC,GAAC,OAAGA,IAAMP,OAC9CF,EAAc,CAACE,GAAF,mBAAgBH,KAC7BI,EAAc,OAOd,2BAAOO,UAAU,YAAYC,KAAK,OAAOC,MAAOV,EAAYW,SAfrC,SAACR,GAC5BF,EAAcE,EAAES,OAAOF,a,uBCPlBG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,mGACuFC,UAAUH,IADjG,SAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAQ,CACJC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZV,IAAKQ,EAAKG,OAAOC,gBAAgBZ,QAVvB,kBAcXM,GAdW,4CAAH,sDCENO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,yBAAKR,UAAU,0CACX,yBAAKsB,IAAKd,EAAKe,IAAKL,IACpB,2BAAIA,KCDHM,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAGtB,ECLyB,SAACA,GACzB,MAA0Bf,mBAAS,CAC/BsB,KAAK,GACLY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNvB,EAAOC,GAAUuB,MAAK,SAAAV,GAClBQ,EAAS,CACLd,KAAMM,EACNM,SAAS,SAIrB,CAACnB,IAEMoB,EDXuBI,CAAaxB,GAAhCa,EAAZ,EAAON,KAAaY,EAApB,EAAoBA,QAGnB,OACI,oCACI,4BAAKnB,GACHmB,GAAW,yCACX,yBAAKzB,UAAU,aAETmB,EAAOJ,KAAI,SAACgB,GACR,OAAO,kBAAC,EAAD,eACHC,IAAKD,EAAId,IACLc,UESjBE,EAzBM,WAEjB,MAAoC1C,mBAAS,CAAC,wBAA9C,mBAAOF,EAAP,KAAmBC,EAAnB,KAGA,OACI,oCACI,4CACA,6BAEA,kBAAC,EAAD,CAAaD,WAAYA,EAAYC,cAAeA,IAEpD,4BAEID,EAAW0B,KAAI,SAAAC,GAAI,OACf,kBAAC,EAAD,CAASgB,IAAKhB,EAAMV,SAAUU,U,MCdlDkB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.d750e403.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({Categories, setCategories}) => {\r\n\r\n    const [InputValue, setInputValue] = useState(\"\");\r\n    const handlerChangetxtSearch = (e) =>{\r\n        setInputValue(e.target.value)\r\n        \r\n    };\r\n    const handlerSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(InputValue !== \"\" && Categories.find(x=> x === InputValue) === undefined){\r\n            setCategories([InputValue,...Categories]);\r\n            setInputValue(\"\");\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <>\r\n        <form onSubmit={handlerSubmit}>\r\n            <input className='txtSearch' type=\"text\" value={InputValue} onChange={handlerChangetxtSearch} />\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    Categories: PropTypes.array.isRequired,\r\n    setCategories: PropTypes.func.isRequired\r\n};","export const GetGif = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=AQT0iKnxFr1eJFAZk46vuhcqSQVvL5xM&limit=10&q=${ encodeURI(category)}`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(item=>{\r\n        return  {\r\n            id: item.id,\r\n            title: item.title,\r\n            url: item.images.downsized_large.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (        \r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n/* import { GetGif } from '../Helpers/GetGifs';*/\r\nimport { GifGridItem } from './GifGridItem'; \r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   \r\n   const {data:images, loading} = useFetchGifs(category);\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            { loading && <p>Loading...</p> }            \r\n            { <div className='card-grid'>\r\n                {\r\n                    images.map((img)=>{\r\n                        return <GifGridItem                             \r\n                            key={img.id} \r\n                            {...img} \r\n                        />\r\n                    })\r\n                }                   \r\n            </div> }\r\n        </>        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { GetGif } from '../Helpers/GetGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });  \r\n    \r\n    useEffect(()=>{\r\n        GetGif(category).then(images=>{            \r\n            setState({\r\n                data: images,\r\n                loading: false\r\n            });            \r\n        });\r\n    },\r\n    [category]);\r\n\r\n    return state; \r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nconst GifExpertApp = () =>  {\r\n\r\n    const [Categories, setCategories] = useState([\"Full metal achemist\"])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n            \r\n            <AddCategory Categories={Categories} setCategories={setCategories} />\r\n\r\n            <ol>\r\n            {\r\n                Categories.map(item=>\r\n                    <GifGrid key={item} category={item}/>\r\n                )\r\n            }\r\n            </ol>            \r\n\r\n            \r\n        </>\r\n    );\r\n}    \r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}